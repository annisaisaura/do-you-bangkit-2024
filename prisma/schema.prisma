generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DB_URL")
}

model RefreshSession {
  id     String @id @default(uuid())
  userId String @unique(map: "Refresh_Session_userId_key")
  user   User   @relation(fields: [userId], references: [id], map: "Refresh_Session_userId_fkey")
}

model User {
  id             String          @id @default(uuid())
  name           String
  email          String          @unique
  password       String
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  refreshSession RefreshSession?
  userCareer     UserCareer[]
  userCourse     UserCourse[]
}

model UserCareer {
  id           String       @id @default(uuid())
  userId       String?
  jenisKelamin JenisKelamin
  roleId       Int?
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  bidang       String
  pendidikan   String
  skill        String
  role         Role?        @relation(fields: [roleId], references: [id])
  user         User?        @relation(fields: [userId], references: [id])

  @@index([roleId], map: "UserCareer_roleId_fkey")
  @@index([userId], map: "UserCareer_userId_fkey")
}

model Role {
  id         Int          @id @default(autoincrement())
  role       String
  userCareer UserCareer[]
}

model UserCourse {
  id        String   @id @default(uuid())
  userId    String?
  courseId  Int
  moduleId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  course    Course   @relation(fields: [courseId], references: [id])
  module    Module   @relation(fields: [moduleId], references: [id])
  user      User?    @relation(fields: [userId], references: [id])

  @@index([courseId], map: "UserCourse_courseId_fkey")
  @@index([moduleId], map: "UserCourse_moduleId_fkey")
  @@index([userId], map: "UserCourse_userId_fkey")
}

model Course {
  id            Int          @id @default(autoincrement())
  course        String
  courseLevelId Int
  courseLevel   CourseLevel  @relation(fields: [courseLevelId], references: [id])
  userCourse    UserCourse[]

  @@index([courseLevelId], map: "Course_courseLevelId_fkey")
}

model CourseLevel {
  id          Int      @id @default(autoincrement())
  courseLevel String
  course      Course[]
}

model Module {
  id                Int             @id @default(autoincrement())
  module            String
  difficultyLevelId Int
  link              String
  difficultyLevel   DifficultyLevel @relation(fields: [difficultyLevelId], references: [id])
  userCourse        UserCourse[]

  @@index([difficultyLevelId], map: "Module_difficultyLevelId_fkey")
}

model DifficultyLevel {
  id              Int      @id @default(autoincrement())
  difficultyLevel String
  module          Module[]
}

enum JenisKelamin {
  Pria
  Perempuan
}
